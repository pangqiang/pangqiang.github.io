<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ios手机端使用最新bing</title>
    <link href="/2023/03/12/ios%E6%89%8B%E6%9C%BA%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%9C%80%E6%96%B0bing/"/>
    <url>/2023/03/12/ios%E6%89%8B%E6%9C%BA%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%9C%80%E6%96%B0bing/</url>
    
    <content type="html"><![CDATA[<h3 id="1-申请新bing候补资格"><a href="#1-申请新bing候补资格" class="headerlink" title="1 申请新bing候补资格"></a>1 申请新bing候补资格</h3><p>申请网址：[ <a href="https://www.microsoftedgeinsider.com/zh-cn/download/dev">https://www.microsoftedgeinsider.com/zh-cn/download/dev</a> ]</p><blockquote><p>个人经验：全程挂梯子并且使用谷歌邮箱似乎通过的很快，我本人是一天左右通过的</p></blockquote><h3 id="2-使用美区ID-在appStore中下载bing"><a href="#2-使用美区ID-在appStore中下载bing" class="headerlink" title="2 使用美区ID 在appStore中下载bing"></a>2 使用美区ID 在appStore中下载bing</h3><blockquote><p>个人经验：bing有3个版本：国际版，中国版，针对中国的个国际版。我们需要的是真正的国际版，所有需要去美区下载</p></blockquote><h3 id="3-bing下载成功后，进行以下三步设置"><a href="#3-bing下载成功后，进行以下三步设置" class="headerlink" title="3 bing下载成功后，进行以下三步设置"></a>3 bing下载成功后，进行以下三步设置</h3><ul><li>手机设置中，地区设置为美国</li><li>科学上网工具代理地址同样选择到美国</li><li>bing APP中地址也同样选择到美国</li></ul><h3 id="4-成功使用bing"><a href="#4-成功使用bing" class="headerlink" title="4 成功使用bing"></a>4 成功使用bing</h3><p><img src="/../images/new-bing.png" alt="alt text"></p>]]></content>
    
    
    
    <tags>
      
      <tag>经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS任意进制之间的转换</title>
    <link href="/2023/03/11/JS%E4%BB%BB%E6%84%8F%E8%BF%9B%E5%88%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/"/>
    <url>/2023/03/11/JS%E4%BB%BB%E6%84%8F%E8%BF%9B%E5%88%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="JavaScript-进制转换"><a href="#JavaScript-进制转换" class="headerlink" title="JavaScript 进制转换"></a>JavaScript 进制转换</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>在计算机科学中，进制转换是一种非常基础的操作。在 JavaScript 中，可以使用 parseInt() 和 toString() 方法进行任意进制之间的转换。在本篇文章中，我们将介绍 JavaScript 中进行进制转换的基本方法，并且提供一些示例帮助你更好地理解这些方法。</p><h3 id="十进制转换为其他进制"><a href="#十进制转换为其他进制" class="headerlink" title="十进制转换为其他进制"></a>十进制转换为其他进制</h3><p>使用 <code>toString()</code> 方法可以将十进制数转换为其他进制数。该方法的参数为目标进制数，例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 十进制转换为二进制</span><br><span class="hljs-keyword">let</span> num = <span class="hljs-number">10</span>;<br><span class="hljs-keyword">let</span> binary = num.<span class="hljs-title function_">toString</span>(<span class="hljs-number">2</span>); <span class="hljs-comment">// &quot;1010&quot;</span><br><br></code></pre></td></tr></table></figure><p>在上面的例子中，num 为十进制数 10，我们将其转换为二进制数 1010</p><h3 id="其他进制转换为十进制"><a href="#其他进制转换为十进制" class="headerlink" title="其他进制转换为十进制"></a>其他进制转换为十进制</h3><p>使用 <code>parseInt()</code> 方法可以将其他进制数转换为十进制数。该方法的第一个参数为需要转换的数值，第二个参数为该数值的进制数，例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 二进制转换为十进制</span><br><span class="hljs-keyword">let</span> binary = <span class="hljs-string">&quot;1010&quot;</span>;<br><span class="hljs-keyword">let</span> num = <span class="hljs-built_in">parseInt</span>(binary, <span class="hljs-number">2</span>); <span class="hljs-comment">// 10</span><br><br></code></pre></td></tr></table></figure><p>在上面的例子中，binary 为二进制数 1010，我们将其转换为十进制数 10。</p><p>需要注意的是，对于八进制数和十六进制数，需要在字符串前添加前缀 0 或 0x，例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 八进制转换为十进制</span><br><span class="hljs-keyword">let</span> octal = <span class="hljs-string">&quot;17&quot;</span>;<br><span class="hljs-keyword">let</span> num = <span class="hljs-built_in">parseInt</span>(octal, <span class="hljs-number">8</span>); <span class="hljs-comment">// 15</span><br><br><span class="hljs-comment">// 十六进制转换为十进制</span><br><span class="hljs-keyword">let</span> hex = <span class="hljs-string">&quot;A1&quot;</span>;<br><span class="hljs-keyword">let</span> num = <span class="hljs-built_in">parseInt</span>(hex, <span class="hljs-number">16</span>); <span class="hljs-comment">// 161</span><br></code></pre></td></tr></table></figure><p>在上面的例子中，octal 为八进制数 17，我们将其转换为十进制数 15。hex 为十六进制数 A1，我们将其转换为十进制数 161。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>核心方法 <code>parseInt()</code> <code>toString()</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>JS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS自定义事件</title>
    <link href="/2022/11/26/JS%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6/"/>
    <url>/2022/11/26/JS%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h3 id="JS-发布订阅模式实现"><a href="#JS-发布订阅模式实现" class="headerlink" title="JS 发布订阅模式实现"></a>JS 发布订阅模式实现</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-comment">// add an appropriate event listener</span><br>obj.addEventListener(<span class="hljs-string">&quot;cat&quot;</span>, <span class="hljs-keyword">function</span><span class="hljs-params">(e)</span> &#123; e.detail &#125;);<br><br><span class="hljs-comment">// create and dispatch the event</span><br><span class="hljs-keyword">var</span> event = <span class="hljs-keyword">new</span> CustomEvent(<span class="hljs-string">&quot;cat&quot;</span>, &#123;<br>  detail: &#123;<br>    hazcheeseburger: <span class="hljs-literal">true</span><br>  &#125;<br>&#125;);<br>obj.dispatchEvent(event);<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>JS</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
